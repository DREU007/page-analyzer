[x] >>> STEP 3 <<<

Требования

    [x]     Используйте именованный роутинг
    [x]     Помните, что имена сайтов должны быть уникальны. Добавление сайта с тем же именем не должно приводить к созданию новой записи в базе данных
    [x]     Если данные не прошли валидацию, то должна рендериться форма с выводом ошибки
    [x]     Используйте flash-сообщения для оповещения об успешном добавлении или ошибках
    [x]     Используйте только стандартные возможности Bootstrap: Сетка, Компоненты, Утилиты
    [x]     Проверьте, что значения атрибутов HTML-элементов форм, текст элементов Label форм, тексты кнопок и ссылок для перехода по страницам, flash-сообщения и другие тексты точно соответствуют демонстрационному проекту
    [x]     У таблицы со списком адресов должен быть атрибут data-test="urls"
    [x]     У таблицы с информацией об адресе должен быть атрибут data-test="url"
    [x]     Таблица с проверками должна содержать атрибут data-test="checks"
    [x]     SQL-файл с созданныи таблицами должен называться database.sql

Задачи

    [x]     Создайте базы данных для разработки и развернутого приложения
    [x]     Создайте в базе данных таблицу urls с полями id, name и created_at
    [x]     В корне проекта создайте SQL-файл с таблицей и назовите его database.sql
    [x]     Реализуйте форму ввода адреса на главной странице и обработчик, который добавляет введенную информацию в базу данных
    [x]     Не забудьте, что имя поля ввода input должно быть url
    [x]     Реализуйте валидацию для введенного URL-адреса. У URL обязательно должен быть валидный адрес, не превышающий 255 символов
    [x]     Реализуйте вывод конкретного введенного URL на отдельной странице urls/<id>
    [x]     Реализуйте вывод всех добавленных URL на отдельной странице /urls и проверьте, что новые записи отображаются первыми
    [x]     Задеплойте результат
>>> END OF STEP 3 <<<


[ ] >>> STEP 4 <<<

Требования

    [x] Таблица с проверками должна содержать атрибут data-test="checks"

Задачи

    [x] Создайте таблицу url_checks с полями id, url_id, status_code, h1, title, description и created_at
    [x] Добавьте описание таблицы в файл database.sql
    [x] Реализуйте обработчик маршрута POST urls/<id>/checks и форму с кнопкой на странице сайта, при отправке которой происходит создание новой проверки. Обратите внимание, что на этом шаге заполняются только базовые поля (url_id и created_at)
    [x] Выведите идентификаторы и даты всех проверок на странице сайта
    [x] Выведите в списке сайтов дату последней проверки рядом с каждым сайтом
    [x] Задеплойте результат

